-- Company	: RIT
-- Author	: Eliot Nagy
-- Created	: 4/11/22
--
-- Project Name	: ex12
-- File		: DM74LS194A
--
-- Entity	: DM74LS194A
-- Architecture	: behv
--
-- Description	: Implements a 4 bit shift register
--
-- Notes	: None

library ieee;
use ieee.std_logic_1164.all;

-- Creates the 10 inputs and 4 outputs
entity DM74LS194A is
	port (
		signal clear : in std_logic;
		signal S1, S0 : in std_logic;
		signal clk : in std_logic;
		signal SL, SR : in std_logic;
		signal A, B, C, D : in std_logic;
		signal Qa, Qb, Qc, Qd : out std_logic);
	
end entity DM74LS194A;

architecture behv of DM74LS194A is

	-- Creates internal signals
	signal mode : std_logic_vector(1 downto 0);
	signal QaI, QbI, QcI, QdI : std_logic;

begin
	
	-- Assigns the internal signal mode
	mode <= (S1 & S0);

	-- Creates the proper outputs
	proc1 : process(clk, clear) is begin
		-- Clears the data
		if (clear = '0') then
			QaI <= '0'; QbI <= '0'; QcI <= '0'; QdI <= '0';

		-- Shifts the data
		elsif rising_edge(clk) then
			case (mode) is
				when "11" => QaI <= A; QbI <= B; QcI <= C; QdI <= D;
				when "01" => QaI <= SR; QbI <= QaI; QcI <= QbI; QdI <= QcI;
				when "10" => QaI <= QbI; QbI <= QcI; QcI <= QdI; QdI <= SL;
				when others => QaI <= QaI; QbI <= QbI; QcI <= QcI; QdI <= QdI;
			end case;
		end if;
	end process;

	-- Sets the outputs
	Qa <= QaI after 22 ns; 
	Qb <= QbI after 22 ns; 
	Qc <= QcI after 22 ns; 
	Qd <= QdI after 22 ns;

end architecture behv;
